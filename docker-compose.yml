version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: byte-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-airflow}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-airflow}
      POSTGRES_DB: ${POSTGRES_DB:-airflow}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-init:
    image: apache/airflow:2.9.3
    container_name: byte-airflow-init
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER:-airflow}:${POSTGRES_PASSWORD:-airflow}@postgres:5432/${POSTGRES_DB:-airflow}
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY:-please_change_me}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY:-}
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_USERNAME:-admin}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_PASSWORD:-admin}
      _AIRFLOW_WWW_USER_EMAIL: ${AIRFLOW_EMAIL:-admin@example.com}
      _AIRFLOW_WWW_USER_FIRSTNAME: ${AIRFLOW_FIRSTNAME:-Admin}
      _AIRFLOW_WWW_USER_LASTNAME: ${AIRFLOW_LASTNAME:-User}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/scripts:/opt/airflow/scripts
      - ./airflow/requirements.txt:/requirements.txt
    entrypoint: /bin/bash
    command: -c "pip install --no-cache-dir -r /requirements.txt && airflow db migrate && airflow users create --username $${_AIRFLOW_WWW_USER_USERNAME} --password $${_AIRFLOW_WWW_USER_PASSWORD} --firstname $${_AIRFLOW_WWW_USER_FIRSTNAME} --lastname $${_AIRFLOW_WWW_USER_LASTNAME} --role Admin --email $${_AIRFLOW_WWW_USER_EMAIL}"
    restart: "no"

  airflow-scheduler:
    image: apache/airflow:2.9.3
    container_name: byte-airflow-scheduler
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER:-airflow}:${POSTGRES_PASSWORD:-airflow}@postgres:5432/${POSTGRES_DB:-airflow}
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY:-please_change_me}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY:-}
      # Pipeline environment variables
      STOCK_SYMBOLS: ${STOCK_SYMBOLS:-MSFT,AAPL,GOOGL}
      STOCKS_DB_URI: postgresql+psycopg2://${POSTGRES_USER:-airflow}:${POSTGRES_PASSWORD:-airflow}@postgres:5432/stocks
      ALPHA_VANTAGE_API_KEY: ${ALPHA_VANTAGE_API_KEY}
      API_THROTTLE_SECONDS: ${API_THROTTLE_SECONDS:-15}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/scripts:/opt/airflow/scripts
      - ./airflow/requirements.txt:/requirements.txt
    command: bash -c "pip install --no-cache-dir -r /requirements.txt && airflow scheduler"
    restart: always

  airflow-webserver:
    image: apache/airflow:2.9.3
    container_name: byte-airflow-webserver
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER:-airflow}:${POSTGRES_PASSWORD:-airflow}@postgres:5432/${POSTGRES_DB:-airflow}
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY:-please_change_me}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY:-}
      # Pipeline environment variables
      STOCK_SYMBOLS: ${STOCK_SYMBOLS:-MSFT,AAPL,GOOGL}
      STOCKS_DB_URI: postgresql+psycopg2://${POSTGRES_USER:-airflow}:${POSTGRES_PASSWORD:-airflow}@postgres:5432/stocks
      ALPHA_VANTAGE_API_KEY: ${ALPHA_VANTAGE_API_KEY}
      API_THROTTLE_SECONDS: ${API_THROTTLE_SECONDS:-15}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/scripts:/opt/airflow/scripts
      - ./airflow/requirements.txt:/requirements.txt
    ports:
      - "8080:8080"
    command: bash -c "pip install --no-cache-dir -r /requirements.txt && airflow webserver"
    healthcheck:
      test: ["CMD-SHELL", "python - <<'PY'\nimport sys, json, urllib.request\ntry:\n    with urllib.request.urlopen('http://localhost:8080/health', timeout=5) as r:\n        data = json.loads(r.read().decode())\n        sys.exit(0 if data.get('metadatabase',{}).get('status')=='healthy' else 1)\nexcept Exception:\n    sys.exit(1)\nPY"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  postgres-data:


